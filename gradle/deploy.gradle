apply plugin: 'maven'
apply plugin: 'maven-publish'

version = generateVersionName()

afterEvaluate { project ->
    println "Build configuration: ${isSnapshotBuild() ? "Snapshot v$version" : "Release v$version"}"

    uploadArchives {
        repositories {
            mavenDeployer {
                if (isExperimentalBuild()) {
                    repository(url: "${System.getenv('NEXUS_EXPERIMENTAL_REPO_URL')}") {
                        println "Deploying to EXPERIMENTAL repository"
                        authentication(userName: "${System.properties['NEXUS_USER']}",
                                password: "${System.properties['NEXUS_PASSWORD']}")
                    }
                } else {
                    repository(url: "${System.getenv('NEXUS_DEV_RELEASES_REPO_URL')}") {
                        println "Deploying to RELEASE repository"
                        authentication(userName: "${System.properties['NEXUS_USER']}",
                                password: "${System.properties['NEXUS_PASSWORD']}")
                    }
                    snapshotRepository(url: "${System.getenv('NEXUS_DEV_SNAPSHOTS_REPO_URL')}") {
                        println "Deploying to SNAPSHOT repository"
                        authentication(userName: "${System.properties['NEXUS_USER']}",
                                password: "${System.properties['NEXUS_PASSWORD']}")
                    }
                }

                pom.version = version
                pom.groupId = POM_GROUP_ID
                pom.artifactId = POM_ARTIFACT_ID

                pom.whenConfigured { pom ->
                    pom.dependencies.forEach { dep ->
                        if (dep.groupId.contains(rootProject.name)) {
                            dep.groupId = POM_GROUP_ID
                        }
                        println "POM is configured"
                    }
                }
            }
        }
    }
}

def isSnapshotBuild() {
    return System.properties['BUILD'] == "SNAPSHOT"
}

def isExperimentalBuild() {
    return System.properties['BUILD'] == "EXPERIMENTAL"
}

def getBuildNumber() {
    def number = (System.getenv("BUILD_NUMBER") ?: "9999")
    return number.padLeft(2, '0')
}

def generateVersionName() {
    if (isExperimentalBuild()) {
        return "$VERSION_NAME-experimental-${getBuildNumber()}"
    } else if (isSnapshotBuild()) {
        return "$VERSION_NAME-SNAPSHOT"
    } else {
        return VERSION_NAME
    }
}

ext {
    generateVersionName = this.&generateVersionName
    isSnapshotBuild = this.&isSnapshotBuild
    isExperimentalBuild = this.&isExperimentalBuild
}
