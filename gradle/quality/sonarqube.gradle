apply plugin: "org.sonarqube"

if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {

    sonarqube {
        properties {
            final def appProjectBuildDir = project.buildDir
            final def sonarUrl = System.getenv('SONAR_HOST_URL')
            final def sonarToken = System.getenv('SONAR_AUTH_TOKEN')

            property 'sonar.projectKey', "${POM_GROUP_ID}.${POM_ARTIFACT_ID}"
            property 'sonar.projectName', POM_ARTIFACT_ID
            property 'sonar.projectVersion', VERSION_NAME

            property 'sonar.host.url', "${sonarUrl}"
            property 'sonar.login', "${sonarToken}"
            property 'sonar.sources', 'src'
            property 'sonar.sourceEncoding', 'UTF-8'
            property 'sonar.java.binaries', 'build'

            property 'sonar.exclusions', ['src/test/**', 'src/androidTest/**']
            property 'sonar.core.codeCoveragePlugin', 'jacoco'
            property 'sonar.jacoco.reportPath', "$appProjectBuildDir/jacoco/testDebugUnitTest.exec"
            property 'sonar.junit.reportsPath', "$appProjectBuildDir/test-results/testDebugUnitTest"
            property 'sonar.coverage.jacoco.xmlReportPaths', ["$appProjectBuildDir/reports/jacoco/fullCoverageReport/fullCoverageReport.xml"]
        }
    }
}
