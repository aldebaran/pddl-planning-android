if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {

    apply plugin: "jacoco"

    android {

        buildTypes { debug.testCoverageEnabled = true }

        lintOptions {
            quiet true
            abortOnError false
            ignoreWarnings true
        }
    }

    jacoco { reportsDir = file("$buildDir/reports/jacoco") }

    task fullCoverageReport(type: JacocoReport) {

        dependsOn 'test'

        reports {
            xml.enabled = true
            html.enabled = true
        }

        final def excludes = [
                '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                '**/*Test*.*', 'android/**/*.*',
                '**/*_MembersInjector.class',
                '**/Dagger*Component.class',
                '**/Dagger*Component$Builder.class',
                '**/*_*Factory.class',
                '**/*ComponentImpl.class',
                '**/*SubComponentBuilder.class'
        ]

        final def mainSrc = "${project.projectDir}/src/main/java"

        sourceDirectories = files([mainSrc])

        classDirectories = fileTree(
                dir: "$buildDir/intermediates/classes/debug",
                excludes: excludes
        ) + fileTree(
                dir: "$buildDir/tmp/kotlin-classes/debug",
                excludes: excludes
        )

        executionData = fileTree(dir: "$buildDir", includes: [
                "jacoco/testDebugUnitTest.exec",
                "outputs/code-coverage/connected/*coverage.ec"
        ])
    }
}
